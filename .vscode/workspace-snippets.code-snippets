{
	// Place your blog-enterprise-integration workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create newDomainEvent function": {
		"prefix": "newde",
		"body": [
			"export const new$1V1 = ({\r",
			"  origin,\r",
			"  data,\r",
			"  context,\r",
			"}: {\r",
			"  origin: EventOrigin;\r",
			"  data: $1DataV1;\r",
			"  context?: DomainEventBase;\r",
			"}): $1V1 =>\r",
			"  newDomainEvent<$1DataV1>({\r",
			"    schema: {\r",
			"      eventType: EventType.$1,\r",
			"      eventVersion: '1.0',\r",
			"    },\r",
			"    origin,\r",
			"    data,\r",
			"    context,\r",
			"  });$0"
		],
		"description": "Create a function to create a new domain event"
	}
}